<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">

<service_bundle type='manifest' name='fluentd'>

<service
	name='system/delphix/fluentd'
	type='service'
	version='1'>

	<create_default_instance enabled='false' />

	<single_instance />

	<dependency name='network'
		grouping='require_all'
		restart_on='error'
		type='service'>
		<service_fmri value='svc:/milestone/network:default' />
	</dependency>

	<dependency name='filesystem-local'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/local:default' />
	</dependency>

	<method_context>
		<method_environment>
			<!--
			Fluentd uses ruby gem "sigdump" for dumping troubleshooting
			information to a local file (thread dump, object allocation etc)
			By default it uses /tmp/sigdump-xxx.log file
			Change it to use /var/log path.
			-->
			<envvar name="SIGDUMP_PATH" value="/var/log/fluentd-sigdump.log" />
		</method_environment>
	</method_context>

	<exec_method
		type='method'
		name='start'
		exec='/lib/delphix/svc-fluentd start'
		timeout_seconds='60' />

	<exec_method
		type='method'
		name='stop'
		exec='/lib/delphix/svc-fluentd stop'
		timeout_seconds='60' />

	<exec_method
		type='method'
		name='refresh'
		exec='/lib/delphix/svc-fluentd refresh'
		timeout_seconds='60' />

	<property_group name='startd' type='framework'>
		<propval name='ignore_error'
			type='astring'  value='signal' />
	</property_group>

	<stability value='Evolving' />

	<template>
		<common_name>
			<loctext xml:lang='C'>
				Delphix Fluentd Service
			</loctext>
		</common_name>
		<description>
			<loctext xml:lang='C'>
				This service starts and stops the
				Delphix Engine's Fluentd daemon.
			</loctext>
		</description>
	</template>
</service>

</service_bundle>
